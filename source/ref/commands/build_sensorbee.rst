.. _ref_commands_build_sensorbee:

``build_sensorbee``
===================

Because SensorBee is written in Go, all its dependencies including plugins
generally need to be statically linked, or at least cannot be dynamically
loeaded at runtime. The ``build_sensorbee`` command is provided to support
building a custom ``sensorbee`` command.

Basic Usage
-----------

Prepare ``build.yaml`` configuration file and run ``build_sensorbee`` in the
same directory as ``build.yaml`` is located at::

    $ ls
    build.yaml
    $ build_sensorbee
    sensorbee_main.go
    $ ls
    build.yaml
    sensorbee
    sensorbee_main.go

``sensorbee`` is the result executable file and ``sensorbee_main.go`` is a
Go file generated by ``build_sensorbee`` and passed for ``go build`` command
to build ``sensorbee``.

Configuration
-------------

``build_sensorbee`` requires a configuration file named ``build.yaml``. The file
is written in `YAML <http://yaml.org/>`_ and has following optional sections:

* ``plugins``

``plugins``
^^^^^^^^^^^

The ``plugins`` section is optional and may have a list of plugins as follows::

    plugins:
      - github.com/sensorbee/twitter/plugin
      - github.com/sensorbee/fluentd/plugin
      - github.com/sensorbee/nlp/plugin
      - github.com/sensorbee/tutorial/ml/plugin
      - github.com/sensorbee/jubatus/classifier/plugin

A plugin must be provided as a valid import path of Go. A path depends on each
plugin.

An Example
^^^^^^^^^^

::

    plugins:
      - github.com/sensorbee/twitter/plugin
      - github.com/sensorbee/fluentd/plugin
      - github.com/sensorbee/nlp/plugin
      - github.com/sensorbee/tutorial/ml/plugin
      - github.com/sensorbee/jubatus/classifier/plugin

Flags and Options
-----------------

``--config path`` or ``-c path``

    This option specifies the path to the configuration file to be used. Its
    default value is ``build.yaml``. With this option, a configuration file in
    another directory can be used as follows::

        $ build_sensorbee -c /path/to/dir/special_build.yaml

``--download-plugins {true | false}``

    This option have to be ``true`` or ``false``. When the value is ``true``,
    ``build_sensorbee`` downloads (i.e. ``go get``) all plugins listed in
    ``build.yaml``. When it's ``false``, ``build_sensorbee`` doesn't download
    plugins and tries to used plugins as installed in the environment. The
    default value is true.

    Specifying ``false`` is useful when the custom ``sensorbee`` command needs
    to depend on a plugin that is in a special git branch or locally modified.

``--help`` or ``-h``

    When this flag is given, the command shows the usage of itself and exits
    without doing anything.

``--only-generate-source``

    When this flag is given, ``build_sensorbee`` doesn't build a ``sensorbee``
    command but only generate a source code that can be built by ``go build``
    command. For example::

        $ build_sensorbee --only-generate-source
        sensorbee_main.go
        $ go build -o sensorbee sensorbee_main.go

``--out executable_name`` or ``-o executable_name``

    This option customizes the name of the output executable file. The default
    is ``sensorbee.exe`` in Windows and ``sensorbee`` in all other environment.
    The following command generates an executable named ``my_sensorbee`` instead
    of ``sensorbee``::

        $ build_sensorbee -o my_sensorbee

``--source-filename filename``

    The filename of the Go source code file automatically generated by
    ``build_sensorbee`` can be speicfied by this option. The default value is
    ``sensorbee_main.go``.

    ::

        $ build_sensorbee --source-filename custom_main.go

    By executing this command, ``custom_main.go`` is generated instead of
    ``sensorbee_main.go``.

``--version`` or ``-v``

    When this flag is given, the command prints the version of the
    ``build_sensorbee`` command.
